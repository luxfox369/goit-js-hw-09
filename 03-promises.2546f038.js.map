{"mappings":"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","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nconst arrPromises = [];\nlet markUp = '<h3>Масив промісів:</h3>';\n\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n  submit: document.querySelector(\".submit\"),\n  buttons: document.querySelector(\".buttons\"),\n  all: document.querySelector(\".all\"),\n  race: document.querySelector(\".race\"),\n  any: document.querySelector(\".any\"),\n  allSet: document.querySelector(\".allSettled\"),\n  reset: document.querySelector(\".reset\"),\n  promises: document.querySelector(\".promises\")\n}\n //вішаємо прослуховувач  на кнопки\n  refs.all.addEventListener(\"click\", allPromise);\n  refs.race.addEventListener(\"click\", racePromise);\n  refs.any.addEventListener(\"click\", anyPromise);\n  refs.allSet.addEventListener(\"click\", allSet);\n  refs.form.addEventListener(\"submit\", onSubmit);\n  refs.reset.addEventListener(\"click\", onReset);\n // кнопки функцій недоступні крім створення промісів\ndisabledButtons();\n//стилі\nrefs.form.style.cssText = 'display:flex;flex-direction:column;align-items:center;gap:10px;padding:5px';\nrefs.submit.style.cssText = 'width:100px;height:50px;padding:5px';\nrefs.buttons.style.cssText = 'display:flex;gap:10px;justify-content:center;height:50px;font-size:30px;padding:5px';\n\n\n//створення промісів\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  //ловимо всі input форми  по name \n  const { elements: { delay, step, amount } } = e.currentTarget;\n  //вони символьні тому перетворюємо на числа\n  let nDelay = Number(delay.value);\n  const nStep = Number(step.value);\n  const nAmount = Number(amount.value);\n  \n  for (i = 1; i <= nAmount; i += 1) {\n    Notiflix.Loading.standard('Creating promises...');\n    if (i > 1) {\n      nDelay += nStep;\n    }\n    let promise = createPromise(i, nDelay);\n   \n    promise\n      .then(data => {Notiflix.Notify.success(data);markUp   += `<p style=\"font-size:12px\"> ${data}</p>` }) // \n      .catch(error => {Notiflix.Notify.failure(error);markUp += `<p style=\"font-size:12px\"> ${error}</p>` }) //\n      \n    //формуємо масив отриманих промісів для подальших функцій\n    arrPromises.push(promise);\n    //намалюємо отримані проміси на сторінці через markUp\n  \n  }\n  setTimeout(() => {\n    //console.log(markUp);\n    refs.promises.innerHTML = markUp;\n    Notiflix.Loading.remove(1000); //забираємо колесо через 1с\n    enabledButtons(); //кнопки функцій доступні\n     }, nDelay+nStep*nAmount); //малювати/відкривати кнопки через затримку коли всі промісі сетлед\n  \n  refs.reset.addEventListener(\"click\", onReset); \n  \n}\n//створення проміса\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.5;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve( `✅ Fulfilled promise ${position} in ${delay}ms` );\n             } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n \n //кнопки функцій недоступні\n function disabledButtons() {\n  refs.all.disabled = true;\n  refs.race.disabled = true;\n  refs.any.disabled = true;\n   refs.allSet.disabled = true;\n   refs.reset.disabled = true;\n   refs.submit.disabled = false;\n}\n\n\n// кнопки функцій доступні\nfunction enabledButtons() {\n  refs.all.disabled = false;\n  refs.race.disabled = false;\n  refs.any.disabled = false;\n  refs.allSet.disabled = false;\n  refs.reset.disabled = false;\n  refs.submit.disabled = true;\n}\n//функції над масивом промісів\nfunction allPromise (){\n  const promiseAll = Promise.all(arrPromises)\n    .then(value => Notiflix.Notify.success(value)) // when all of the promises fulfill;  \n    .catch(error => Notiflix.Notify.failure(error));// rejects when any of the promises rejects and return the first rejected\n}\nfunction racePromise() {\n    const promiseRace = Promise.race(arrPromises)\n      .then(value => Notiflix.Notify.success(value)) //RACE Settles = fulfills when first of the promises fulfills \n      .catch(error => Notiflix.Notify.failure(error));//rejects when first of the promises rejects.\n}\nfunction anyPromise() {\n  const promiseAny = Promise.any(arrPromises)\n    .then(value => Notiflix.Notify.success(value)) //ANY поверне Fulfills when any of the promises fulfills; \n    .catch(error => Notiflix.Notify.failure(error));// rejects when all of the promises reject. and returns aggregateEror якщо всі rejected  \n}\nfunction allSet() {\n  const promiseAllSettled = Promise.allSettled(arrPromises)\n    .then(value => Notiflix.Notify.success(value)) //AllSettled поверне  масив всіх промісів як resolve/reject коли всі проміси завершені(settled)\n    .catch(error => Notiflix.Notify.failure(error));\n}\n\n\nfunction onReset() {\n  //e.currentTarget.reset();\n  refs.form.reset();\n  refs.promises.innerHTML = \"\";\n  disabledButtons();\n  refs.all.removeEventListener(\"click\", allPromise);\n  refs.race.removeEventListener(\"click\", racePromise);\n  refs.any.removeEventListener(\"click\", anyPromise);\n  refs.allSet.removeEventListener(\"click\", allSet);\n  refs.reset.removeEventListener(\"click\", onReset);\n}\n\n\n "],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$arrPromises","$ce04d3a99e08e73b$var$markUp","$ce04d3a99e08e73b$var$refs","form","document","querySelector","submit","buttons","all","race","any","allSet","reset","promises","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","$ce04d3a99e08e73b$var$disabledButtons","disabled","$ce04d3a99e08e73b$var$allPromise","then","value","$parcel$interopDefault","Notify","success","catch","error","failure","$ce04d3a99e08e73b$var$racePromise","$ce04d3a99e08e73b$var$anyPromise","$ce04d3a99e08e73b$var$allSet","allSettled","$ce04d3a99e08e73b$var$onReset","innerHTML","removeEventListener","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","nDelay","Number","nStep","nAmount","i","Loading","standard","promise","data","push","remove","style","cssText"],"version":3,"file":"03-promises.2546f038.js.map"}