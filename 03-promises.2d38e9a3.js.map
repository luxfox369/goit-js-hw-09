{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAc,GACpB,IAAIC,EAAS,2BAGA,MAAPC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,WAC/BE,QAASH,SAASC,cAAc,YAChCG,IAAKJ,SAASC,cAAc,QAC5BI,KAAML,SAASC,cAAc,SAC7BK,IAAKN,SAASC,cAAc,QAC5BM,OAAQP,SAASC,cAAc,eAC/BO,MAAOR,SAASC,cAAc,UAC9BQ,SAAUT,SAASC,cAAc,cAuDnB,SAAPS,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAS,uBAAqBH,QAAiBC,OAE7CG,EAAK,sBAAoBJ,QAAiBC,MAAU,GAEvDA,EAAM,G,CAKW,SAAdQ,IACRtB,EAAKM,IAAIiB,UAAW,EACpBvB,EAAKO,KAAKgB,UAAW,EACrBvB,EAAKQ,IAAIe,UAAW,EACnBvB,EAAKS,OAAOc,UAAW,EACvBvB,EAAKU,MAAMa,UAAW,EACtBvB,EAAKI,OAAOmB,UAAW,C,CAcD,SAAhBC,IACYT,QAAQT,IAAIR,GAC5B2B,MAAKC,GAASC,EAAA/B,GAASgC,OAAOC,QAAQH,KACtCI,OAAMC,GAASJ,EAAA/B,GAASgC,OAAOI,QAAQD,I,CAE5C,SAASE,IACelB,QAAQR,KAAKT,GAC9B2B,MAAKC,GAASC,EAAA/B,GAASgC,OAAOC,QAAQH,KACtCI,OAAMC,GAASJ,EAAA/B,GAASgC,OAAOI,QAAQD,I,CAE9C,SAASG,IACYnB,QAAQP,IAAIV,GAC5B2B,MAAKC,GAASC,EAAA/B,GAASgC,OAAOC,QAAQH,KAC/BI,OAADC,GAASJ,EAAA/B,GAASgC,OAAOI,QAAQD,I,CAE5C,SAASI,IACmBpB,QAAQqB,WAAWtC,GAC1C2B,MAAKC,GAASC,EAAA/B,GAASgC,OAAOC,QAAQH,KACtCI,OAAMC,GAASJ,EAAA/B,GAASgC,OAAOI,QAAQD,I,CAI5C,SAASM,IAEPrC,EAAKC,KAAKS,QACVV,EAAKW,SAAS2B,UAAY,GAC1BhB,IACAtB,EAAKM,IAAIiC,oBAAoB,QAASf,GACtCxB,EAAKO,KAAKgC,oBAAoB,QAASN,GACvCjC,EAAKQ,IAAI+B,oBAAoB,QAASL,GACtClC,EAAKS,OAAO8B,oBAAoB,QAASJ,GACzCnC,EAAKU,MAAM6B,oBAAoB,QAASF,E,CArHZrC,EAAvBM,IAAIkC,iBAAiB,QAAShB,GACnCxB,EAAKO,KAAKiC,iBAAiB,QAASP,GACpCjC,EAAKQ,IAAIgC,iBAAiB,QAASN,GACnClC,EAAKS,OAAO+B,iBAAiB,QAASL,GACtCnC,EAAKC,KAAKuC,iBAAiB,UAYZ,SAACC,GAChBA,EAAEC,iBAEc,MAARC,UAAU7B,MAAEA,EAAK8B,KAAEA,EAAIC,OAAEA,IAAaJ,EAAEK,cAEZ,IAAhCC,EAASC,OAAOlC,EAAMY,OAC1B,MAAMuB,EAAQD,OAAOJ,EAAKlB,OACpBwB,EAAUF,OAAOH,EAAOnB,OAE9B,IAAKyB,EAAI,EAAGA,GAAKD,EAASC,GAAK,EAAG,CAChCxB,EAAA/B,GAASwD,QAAQC,SAAS,wBACtBF,EAAI,IACNJ,GAAUE,GAEZ,IAAIK,EAAU1C,EAAcuC,EAAGJ,GAE/BO,EACG7B,MAAK8B,IAAS5B,EAAA/B,GAASgC,OAAOC,QAAQ0B,GAAMxD,GAAY,8BAA8BwD,OAAU,IAChGzB,OAAMC,IAAUJ,EAAA/B,GAASgC,OAAOI,QAAQD,GAAOhC,GAAU,8BAA8BgC,OAAW,IAGpDjC,EAArC0D,KAAKF,E,CAInBjC,YAAW,KAETrB,EAAKW,SAAS2B,UAAYvC,EAC1B4B,EAAA/B,GAASwD,QAAQK,OAAO,KAkC1BzD,EAAKM,IAAIiB,UAAW,EACpBvB,EAAKO,KAAKgB,UAAW,EACrBvB,EAAKQ,IAAIe,UAAW,EACpBvB,EAAKS,OAAOc,UAAW,EACvBvB,EAAKU,MAAMa,UAAW,EACtBvB,EAAKI,OAAOmB,UAAW,CAtCL,GACZwB,EAAOE,EAAMC,GAEsClD,EAApDU,MAAM8B,iBAAiB,QAASH,E,IA3CrCrC,EAAKU,MAAM8B,iBAAiB,QAASH,GAEKf,IAEvCtB,EAAAC,KAAKyD,MAAMC,QAAU,6EAC1B3D,EAAKI,OAAOsD,MAAMC,QAAU,sCAC5B3D,EAAKK,QAAQqD,MAAMC,QAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nconst arrPromises = [];\nlet markUp = '<h3>Масив промісів:</h3>';\n\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n  submit: document.querySelector(\".submit\"),\n  buttons: document.querySelector(\".buttons\"),\n  all: document.querySelector(\".all\"),\n  race: document.querySelector(\".race\"),\n  any: document.querySelector(\".any\"),\n  allSet: document.querySelector(\".allSettled\"),\n  reset: document.querySelector(\".reset\"),\n  promises: document.querySelector(\".promises\")\n}\n //вішаємо прослуховувач  на кнопки\n  refs.all.addEventListener(\"click\", allPromise);\n  refs.race.addEventListener(\"click\", racePromise);\n  refs.any.addEventListener(\"click\", anyPromise);\n  refs.allSet.addEventListener(\"click\", allSet);\n  refs.form.addEventListener(\"submit\", onSubmit);\n  refs.reset.addEventListener(\"click\", onReset);\n // кнопки функцій недоступні крім створення промісів\ndisabledButtons();\n//стилі\nrefs.form.style.cssText = 'display:flex;flex-direction:column;align-items:center;gap:10px;padding:5px';\nrefs.submit.style.cssText = 'width:100px;height:50px;padding:5px';\nrefs.buttons.style.cssText = 'display:flex;gap:10px;justify-content:center;height:50px;font-size:30px;padding:5px';\n\n\n//створення промісів\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  //ловимо всі input форми  по name \n  const { elements: { delay, step, amount } } = e.currentTarget;\n  //вони символьні тому перетворюємо на числа\n  let nDelay = Number(delay.value);\n  const nStep = Number(step.value);\n  const nAmount = Number(amount.value);\n  \n  for (i = 1; i <= nAmount; i += 1) {\n    Notiflix.Loading.standard('Creating promises...');\n    if (i > 1) {\n      nDelay += nStep;\n    }\n    let promise = createPromise(i, nDelay);\n   \n    promise\n      .then(data => {Notiflix.Notify.success(data);markUp   += `<p style=\"font-size:12px\"> ${data}</p>` }) // \n      .catch(error => {Notiflix.Notify.failure(error);markUp += `<p style=\"font-size:12px\"> ${error}</p>` }) //\n      \n    //формуємо масив отриманих промісів для подальших функцій\n    arrPromises.push(promise);\n    //намалюємо отримані проміси на сторінці через markUp\n  \n  }\n  setTimeout(() => {\n    //console.log(markUp);\n    refs.promises.innerHTML = markUp;\n    Notiflix.Loading.remove(1000); //забираємо колесо через 1с\n    enabledButtons(); //кнопки функцій доступні\n     }, nDelay+nStep*nAmount); //малювати/відкривати кнопки через затримку коли всі промісі сетлед\n  \n  refs.reset.addEventListener(\"click\", onReset); \n  \n}\n//створення проміса\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.5;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve( `✅ Fulfilled promise ${position} in ${delay}ms` );\n             } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n \n //кнопки функцій недоступні\n function disabledButtons() {\n  refs.all.disabled = true;\n  refs.race.disabled = true;\n  refs.any.disabled = true;\n   refs.allSet.disabled = true;\n   refs.reset.disabled = true;\n   refs.submit.disabled = false;\n}\n\n\n// кнопки функцій доступні\nfunction enabledButtons() {\n  refs.all.disabled = false;\n  refs.race.disabled = false;\n  refs.any.disabled = false;\n  refs.allSet.disabled = false;\n  refs.reset.disabled = false;\n  refs.submit.disabled = true;\n}\n//функції над масивом промісів\nfunction allPromise (){\n  const promiseAll = Promise.all(arrPromises)\n    .then(value => Notiflix.Notify.success(value)) // when all of the promises fulfill;  \n    .catch(error => Notiflix.Notify.failure(error));// rejects when any of the promises rejects and return the first rejected\n}\nfunction racePromise() {\n    const promiseRace = Promise.race(arrPromises)\n      .then(value => Notiflix.Notify.success(value)) //RACE Settles = fulfills when first of the promises fulfills \n      .catch(error => Notiflix.Notify.failure(error));//rejects when first of the promises rejects.\n}\nfunction anyPromise() {\n  const promiseAny = Promise.any(arrPromises)\n    .then(value => Notiflix.Notify.success(value)) //ANY поверне Fulfills when any of the promises fulfills; \n    .catch(error => Notiflix.Notify.failure(error));// rejects when all of the promises reject. and returns aggregateEror якщо всі rejected  \n}\nfunction allSet() {\n  const promiseAllSettled = Promise.allSettled(arrPromises)\n    .then(value => Notiflix.Notify.success(value)) //AllSettled поверне  масив всіх промісів як resolve/reject коли всі проміси завершені(settled)\n    .catch(error => Notiflix.Notify.failure(error));\n}\n\n\nfunction onReset() {\n  //e.currentTarget.reset();\n  refs.form.reset();\n  refs.promises.innerHTML = \"\";\n  disabledButtons();\n  refs.all.removeEventListener(\"click\", allPromise);\n  refs.race.removeEventListener(\"click\", racePromise);\n  refs.any.removeEventListener(\"click\", anyPromise);\n  refs.allSet.removeEventListener(\"click\", allSet);\n  refs.reset.removeEventListener(\"click\", onReset);\n}\n\n\n "],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$arrPromises","$47d4ff9957288465$var$markUp","$47d4ff9957288465$var$refs","form","document","querySelector","submit","buttons","all","race","any","allSet","reset","promises","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$disabledButtons","disabled","$47d4ff9957288465$var$allPromise","then","value","$parcel$interopDefault","Notify","success","catch","error","failure","$47d4ff9957288465$var$racePromise","$47d4ff9957288465$var$anyPromise","$47d4ff9957288465$var$allSet","allSettled","$47d4ff9957288465$var$onReset","innerHTML","removeEventListener","addEventListener","e","preventDefault","elements","step","amount","currentTarget","nDelay","Number","nStep","nAmount","i","Loading","standard","promise","data","push","remove","style","cssText"],"version":3,"file":"03-promises.2d38e9a3.js.map"}