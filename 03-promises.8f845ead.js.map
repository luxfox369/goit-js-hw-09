{"mappings":"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","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nlet arrPromises = [];\nlet markUp = '<h3>Created promises:</h3>';\n\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n  submit: document.querySelector(\".submit\"),\n  buttons: document.querySelector(\".buttons\"),\n  all: document.querySelector(\".all\"),\n  race: document.querySelector(\".race\"),\n  any: document.querySelector(\".any\"),\n  allSet: document.querySelector(\".allSettled\"),\n  reset: document.querySelector(\".reset\"),\n  promises: document.querySelector(\".promises\")\n}\n //вішаємо прослуховувач  на кнопки\n  refs.all.addEventListener(\"click\", allPromise);\n  refs.race.addEventListener(\"click\", racePromise);\n  refs.any.addEventListener(\"click\", anyPromise);\n  refs.allSet.addEventListener(\"click\", allSet);\n  refs.form.addEventListener(\"submit\", onSubmit);\n  refs.reset.addEventListener(\"click\", onReset);\n // кнопки функцій недоступні крім створення промісів\ndisabledButtons();\n//стилі\nrefs.form.style.cssText = 'display:flex;flex-direction:column;align-items:center;gap:10px;padding:5px';\nrefs.submit.style.cssText = 'width:100px;height:50px;padding:5px';\nrefs.buttons.style.cssText = 'display:flex;gap:10px;justify-content:center;height:50px;font-size:30px;padding:5px';\n\n\n//створення промісів\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  //ловимо всі input форми  по name \n  const { elements: { delay, step, amount } } = e.currentTarget;\n  //вони символьні тому перетворюємо на числа\n  let nDelay = Number(delay.value);\n  const nStep = Number(step.value);\n  const nAmount = Number(amount.value);\n  \n  for (i = 1; i <= nAmount; i += 1) {\n    Notiflix.Loading.standard('Creating promises...');\n    if (i > 1) {\n      nDelay += nStep;\n    }\n    let promise = createPromise(i, nDelay);\n   \n    promise\n      .then(data => {Notiflix.Notify.success(data);markUp   += `<p style=\"font-size:12px\"> ${data}</p>` }) // \n      .catch(error => {Notiflix.Notify.failure(error);markUp += `<p style=\"font-size:12px\"> ${error}</p>` }) //\n      \n    //формуємо масив отриманих промісів для подальших функцій\n    arrPromises.push(promise);\n    //намалюємо отримані проміси на сторінці через markUp\n  \n  }\n  setTimeout(() => { //щоб намалювались проміси на сторінці після створення всіх\n    //console.log(markUp);\n    refs.promises.innerHTML = markUp;\n    Notiflix.Loading.remove(1000); //забираємо колесо через 1с\n    enabledButtons(); //кнопки функцій доступні\n     }, nDelay+nStep*nAmount); //малювати/відкривати кнопки через затримку коли всі промісі сетлед\n  \n  refs.reset.addEventListener(\"click\", onReset); \n  \n}\n//створення проміса\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.5;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve( `✅ Fulfilled promise ${position} in ${delay}ms` );\n             } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n \n //кнопки функцій недоступні\n function disabledButtons() {\n  refs.all.disabled = true;\n  refs.race.disabled = true;\n  refs.any.disabled = true;\n   refs.allSet.disabled = true;\n   refs.reset.disabled = true;\n   refs.submit.disabled = false;\n}\n\n\n// кнопки функцій доступні\nfunction enabledButtons() {\n  refs.all.disabled = false;\n  refs.race.disabled = false;\n  refs.any.disabled = false;\n  refs.allSet.disabled = false;\n  refs.reset.disabled = false;\n  refs.submit.disabled = true;\n}\n//функції над масивом промісів\nfunction allPromise (){\n  const promiseAll = Promise.all(arrPromises)\n    .then(value => Notiflix.Notify.success(value)) // when all of the promises fulfill;  \n    .catch(error => Notiflix.Notify.failure(error));// rejects when any of the promises rejects and return the first rejected\n}\nfunction racePromise() {\n    const promiseRace = Promise.race(arrPromises)\n      .then(value => Notiflix.Notify.success(value)) //RACE Settles = fulfills when first of the promises fulfills \n      .catch(error => Notiflix.Notify.failure(error));//rejects when first of the promises rejects.\n}\nfunction anyPromise() {\n  const promiseAny = Promise.any(arrPromises)\n    .then(value => Notiflix.Notify.success(value)) //ANY поверне Fulfills when any of the promises fulfills; \n    .catch(error => Notiflix.Notify.failure(error));// rejects when all of the promises reject. and returns aggregateEror якщо всі rejected  \n}\nfunction allSet() {\n  const promiseAllSettled = Promise.allSettled(arrPromises)\n    .then(value => Notiflix.Notify.success(value)) //AllSettled поверне  масив всіх промісів як resolve/reject коли всі проміси завершені(settled)\n    .catch(error => Notiflix.Notify.failure(error));\n}\n\n\nfunction onReset() {\n  refs.form.reset();\n  refs.promises.innerHTML = \"\";\n  arrPromises = [];\n  markUp = '<h3>Created promises:</h3>';\n  disabledButtons();\n  /*refs.all.removeEventListener(\"click\", allPromise);\n  refs.race.removeEventListener(\"click\", racePromise);\n  refs.any.removeEventListener(\"click\", anyPromise);\n  refs.allSet.removeEventListener(\"click\", allSet);\n  refs.reset.removeEventListener(\"click\", onReset);*/\n}\n\n\n "],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$arrPromises","$47d4ff9957288465$var$markUp","$47d4ff9957288465$var$refs","form","document","querySelector","submit","buttons","all","race","any","allSet","reset","promises","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$disabledButtons","disabled","$47d4ff9957288465$var$onReset","innerHTML","addEventListener","then","value","$parcel$interopDefault","Notify","success","catch","error","failure","allSettled","e","preventDefault","elements","step","amount","currentTarget","nDelay","Number","nStep","nAmount","i","Loading","standard","promise","data","push","remove","style","cssText"],"version":3,"file":"03-promises.8f845ead.js.map"}